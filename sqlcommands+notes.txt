PostgreSQl (Different from MySQL) [Mostly same]: supabase
----------------------------------------------------------------------------------------------------------------------

D-1:
create database student_management;

create table students (
 student_id serial primary key, // serial === auto_increment (no need for int declaration)
 first_name varchar(50) not null,
 last_name varchar(50) not null,
 age int,
 gender varchar(5),
 email varchar(255) unique
);


create table courses (
  course_id serial primary key,
  course_name varchar(100) not null,
  department_id int references departments (department_id) on delete cascade,
  credits int not null
);

create table enrollments (
  enrollment_id serial primary key,
  student_id int references students (student_id) on delete cascade,
  course_id int references courses (course_id) ON delete cascade,
  grade varchar(2)
);

create table departments (
  DEPARTMENT_ID serial primary key,
  department_name varchar(100) not null
);

insert into students 
(first_name, last_name, age, gender, email)
VALUES('Ram', 'Thapa', 16, 'Male', 'ramthapa@gmail.com'),
('Shyam', 'Shrestha', 17, 'Male', 'shyamstha@gmail.com'),
('Sita', 'Thapa', 18, 'Fmale', 'sitathapa@gmail.com');

insert into courses 
(course_name, department_id, credits )
VALUES('Physics', 1, 160),
('Chemistry', 2, 90),
('CS', 3, 108);

insert into enrollments
(student_id, course_id, grade )
VALUES(1, 1, 'A'),
(2, 2, 'C'),
(3, 3, 'B');

insert into departments
(department_name)
VALUES('Physics'),
('Chemistry'),
('CS');

update students set first_name = 'Hari' where student_id = 1; //update

drop table students; //delete

select * from enrollments where student_id = 2; // read [Should add Join but lazy]

----------------------------------------------------------------------------------------------------------------------

D-2:

python -m venv venv   //to create venv folder
.\venv\Scripts\activate   //to initialize virtual environment of venv [Set-ExecutionPolicy Unrestricted -Scope Process] : If error 
pip install psycopg  //Library for database interaction, not required for flasktrain proejct specifically, only for studentcrud.py
i-frame in html (study)

After django-admin startproject project-name //start new project;new vitrtual environment
After such, reinstall django in this new virtual environment as it is new.



Then, py manage.py runserver
After that, it will ask if you want to migrate, if yes do py manage.py migrate (Ctrl+C for if the command line disappears- The terminal is busy when the server is running, this terminates the server)
py manage.py createsuperuser, after creating admin(superuser), add username, password, email and,
py manage.py runserver,
go to the site and login as admin

--------------------------------------------------------------------------------------------------------------------------

D-3:

Decoupled Architecture: Separates frontend and backend (React) [Backend == API, node.js, django, etc]
Coupled Architecture: Frontend and Backend on the same page of code; same process (PhP, D2-Python)
ORM == Object-Relational Mapper (psycopg2 in this case)
deativate == terminate the virtual environment; eats RAM space

- Creation of new project studentinformation